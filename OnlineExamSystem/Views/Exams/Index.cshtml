@using OnlineExamSystem.Models
@model List<Exam>
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Manage Exams</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h2 class="h4 mb-0">Manage Exams</h2>

            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <a href="/AdminBase/CreateExam" class="btn btn-success">Create an Exam</a>

                    <span class="badge bg-info">Total Exams: @Model.Count</span>
                </div>

                @if (!Model.Any())
                {
                    <div class="alert alert-info mb-0">
                        No exams found. Start by creating a new exam.
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-hover table-striped mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th>Title</th>
                                    <th>Description</th>
                                    <th>Created Date</th>
                                    <th class="text-end">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var exam in Model)
                                {
                                    <tr>
                                        <td>@exam.Title</td>
                                        <td class="text-muted">@(string.IsNullOrEmpty(exam.Description) ? "No description" : exam.Description)</td>
                                        <td>@exam.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                                        <td class="text-end">
                                            <div class="btn-group" role="group">
                                                <a asp-controller="AdminBase" asp-action="EditExam" asp-route-id="@exam.ExamId"
                                                   class="btn btn-sm btn-outline-warning" title="Edit Exam">
                                                    <i class="fas fa-edit"></i>
                                                </a>

 
                                                    <a href="#" data-exam-id="@exam.ExamId"
                                                       class="btn btn-sm btn-outline-danger delete-exam-btn"
                                                       title="Delete Exam">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
    <script>
                document.querySelectorAll('.delete-exam-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const examId = this.dataset.examId;

                if (confirm('Are you sure you want to delete this exam?')) {
                    fetch(`/AdminBase/Delete/${examId}`, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            // Remove the row from the table
                            const row = this.closest('tr');
                            row.parentNode.removeChild(row);

                            // Update exam count
                            const countBadge = document.querySelector('.badge.bg-info');
                            countBadge.textContent = `Total Exams: ${parseInt(countBadge.textContent.match(/\d+/)) - 1}`;
                        } else {
                            alert('Error deleting exam');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while deleting');
                    });
                }
            });
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>